# Generated by Django 5.2 on 2025-04-06 22:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('official_name', models.CharField(blank=True, max_length=200, null=True)),
                ('three_letter_code', models.CharField(blank=True, max_length=3, null=True)),
                ('numeric_code', models.CharField(blank=True, max_length=3, null=True)),
                ('alternate_names', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('three_letter_code', models.CharField(max_length=3)),
                ('bibliographic_code', models.CharField(blank=True, max_length=3)),
                ('alternate_names', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('olid', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('bio', models.TextField(blank=True, null=True)),
                ('birth_date', models.CharField(blank=True, max_length=50, null=True)),
                ('death_date', models.CharField(blank=True, max_length=50, null=True)),
                ('birth_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authors', to='books_api.country')),
                ('other_countries', models.ManyToManyField(blank=True, related_name='associated_authors', to='books_api.country')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('subject_type', models.CharField(blank=True, choices=[('genre', 'Genre (Fiction)'), ('nonfiction', 'Genre (Non-Fiction)'), ('theme', 'Theme'), ('place', 'Place/Setting'), ('time_period', 'Time Period'), ('character', 'Character Type'), ('demographic', 'Audience Demographic')], max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('alternate_names', models.JSONField(blank=True, default=list)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='books_api.subject')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('olid', models.CharField(max_length=20, unique=True)),
                ('isbn_10', models.CharField(blank=True, max_length=10, null=True)),
                ('isbn_13', models.CharField(blank=True, max_length=13, null=True)),
                ('lccn', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(max_length=500)),
                ('subtitle', models.CharField(blank=True, max_length=500, null=True)),
                ('publish_date', models.CharField(blank=True, max_length=50, null=True)),
                ('publishers', models.JSONField(default=list)),
                ('subject_places', models.JSONField(default=list)),
                ('subject_times', models.JSONField(default=list)),
                ('literary_awards', models.JSONField(default=list)),
                ('number_of_pages', models.IntegerField(blank=True, null=True)),
                ('physical_format', models.CharField(blank=True, max_length=50, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=100, null=True)),
                ('weight', models.CharField(blank=True, max_length=50, null=True)),
                ('cover_url', models.URLField(blank=True, null=True)),
                ('preview_url', models.URLField(blank=True, null=True)),
                ('availability', models.CharField(blank=True, choices=[('free', 'Free Access'), ('borrow', 'Borrow Only'), ('paid', 'Purchase Required')], max_length=10, null=True)),
                ('authors', models.ManyToManyField(related_name='books', to='books_api.author')),
                ('publish_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_books', to='books_api.country')),
                ('languages', models.ManyToManyField(blank=True, to='books_api.language')),
                ('subjects', models.ManyToManyField(related_name='books', to='books_api.subject')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['subject_type'], name='books_api_s_subject_4dd672_idx'),
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['name'], name='books_api_s_name_71d568_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='books_api_b_title_32364b_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['publish_date'], name='books_api_b_publish_49d8da_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['publish_country'], name='books_api_b_publish_7eec48_idx'),
        ),
    ]
